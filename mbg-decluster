# Copyright (C) 2009 Peter Gething
# 
# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
# 
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
# 
# You should have received a copy of the GNU General Public License
# along with this program.  If not, see <http://www.gnu.org/licenses/>.

from optparse import OptionParser
import os, sys, time, imp, datetime

# Create option parser
req_doc = """

mbg-decluster  Copyright (C) 2009 Peter Gething
This program comes with ABSOLUTELY NO WARRANTY.
This is free software, and you are welcome to redistribute it under certain conditions.
See <http://www.gnu.org/licenses/> for the terms of the license.


  input                 The csv file of input data to be divided.
  prop                  The proportion of the dataset to be used for the holdout set.
"""
p = OptionParser('usage: %prog input prop [options]' + req_doc)
p.add_option('-m','--minsample',help='Minimum sample size (supercedes prop if larger)',dest='minsample',type='int')
p.add_option('-d','--decluster',help="Do we want to draw spatially declustered sample (default) or just simple random?",dest='decluster')
p.add_option('-p','--makeplot',help="Do we want to export a pdf map showing location of data and selected points? This is exported to same directory as input.",dest='makeplot')

p.set_defaults(minsample=0)
p.set_defaults(decluster=True)
p.set_defaults(makeplot=True)

o, args = p.parse_args()
from generic_mbg import *
check_args(args, 2)

o.input = args[0]
o.prop = float(args[1])

from rpy2.robjects import r
r('source')('/usr/local/bin/get_declustered_sample.R')

r('getdeclusteredsample')(o.input,o.prop,o.minsample,o.decluster,o.makeplot)
